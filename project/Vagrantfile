# -*- mode: ruby -*-
# vim: set ft=ruby :

MACHINES = [
    {
	:hostname => "ns1",
	:box_os => "centos/7",
	:ip_addr => '192.168.11.148'
    },
    {
	:hostname => "ns2",
	:box_os => "centos/7",
	:ip_addr => '192.168.11.149'
    },
    {
	:hostname => "cl1",
	:box_os => "centos/7",
	:ip_addr => '192.168.11.153'
    },
    {
	:hostname => "cl2",
	:box_os => "centos/7",
	:ip_addr => '192.168.11.154'
    },
    {
	:hostname => "cl3",
	:box_os => "centos/7",
	:ip_addr => '192.168.11.155'
    },
    {
	:hostname => "srv1",
	:box_os => "centos/7",
	:ip_addr => '192.168.11.156'
    },
    {
	:hostname => "srv2",
	:box_os => "centos/7",
	:ip_addr => '192.168.11.157'
    },
]

Vagrant.configure("2") do |config|

  MACHINES.each_with_index do |box, index|

    config.vm.define box[:hostname] do |box_config|

	box_config.vm.box = box[:box_os]
	box_config.vm.host_name = box[:hostname] + ".otuslab.ru"

	box_config.vm.network "private_network", ip: box[:ip_addr]

	box_config.vm.provider :virtualbox do |vb|
	    vb.customize ["modifyvm", :id, "--memory", "256"]
	end

	box_config.vm.provision "shell", inline: <<-SHELL
	    mkdir -p ~root/.ssh
	    cp ~vagrant/.ssh/auth* ~root/.ssh
	    sed -i '65s/PasswordAuthentication no/PasswordAuthentication yes/g' /etc/ssh/sshd_config
	    systemctl restart sshd
	SHELL

	box_config.vm.provision "ansible" do |ansible|
	    ansible.compatibility_mode = "2.0"
	    ansible.playbook = "provision.yml"
	    ansible.become = "true"
	    ansible.extra_vars = {
		vagrant_hostname: box[:hostname],
		vagrant_ipaddress: box[:ip_addr]
	    }
	end

    end
  end
end
