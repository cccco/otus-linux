# -*- mode: ruby -*-
# vim: set ft=ruby :

MACHINES = {
  :inetRouter => {
        :box_name => "centos/6",
        :net => [
                   {ip: '192.168.255.1', adapter: 2, netmask: "255.255.255.252", virtualbox__intnet: "router-net"},
                ]
  },

  :inetRouter2 => {
        :box_name => "centos/6",
        :net => [
                   {ip: '192.168.255.5', adapter: 2, netmask: "255.255.255.252", virtualbox__intnet: "router2-net"},
                ]
  },

  :centralRouter => {
        :box_name => "centos/7",
        :net => [
                   {ip: '192.168.255.2', adapter: 2, netmask: "255.255.255.252", virtualbox__intnet: "router-net"},
                   {ip: '192.168.255.6', adapter: 3, netmask: "255.255.255.252", virtualbox__intnet: "router2-net"},
                   {ip: '192.168.0.1', adapter: 4, netmask: "255.255.255.240", virtualbox__intnet: "dir-net"}
                ]
  },
  :centralServer => {
        :box_name => "centos/7",
        :net => [
                   {ip: '192.168.0.2', adapter: 2, netmask: "255.255.255.240", virtualbox__intnet: "dir-net"},
                   {adapter: 3, auto_config: false, virtualbox__intnet: true},
                   {adapter: 4, auto_config: false, virtualbox__intnet: true},
                ]
  },

}

Vagrant.configure("2") do |config|

  MACHINES.each do |boxname, boxconfig|

    config.vm.define boxname do |box|

        box.vm.box = boxconfig[:box_name]
        box.vm.host_name = boxname.to_s

        boxconfig[:net].each do |ipconf|
          box.vm.network "private_network", ipconf
        end
        
        if boxconfig.key?(:public)
          box.vm.network "public_network", boxconfig[:public]
        end

	box.vm.provider :virtualbox do |vb|
	    vb.customize ["modifyvm", :id, "--memory", "256"]
	end

        box.vm.provision "shell", inline: <<-SHELL
          mkdir -p ~root/.ssh
                cp ~vagrant/.ssh/auth* ~root/.ssh
        SHELL

        case boxname.to_s
        when "inetRouter"
          box.vm.provision "shell", run: "always", inline: <<-SHELL
	    sed -i 's/PasswordAuthentication no/PasswordAuthentication yes/g' /etc/ssh/sshd_config
	    service sshd restart

            sysctl net.ipv4.conf.all.forwarding=1
            iptables -t nat -A POSTROUTING ! -d 192.168.0.0/16 -o eth0 -j MASQUERADE

	    ip route add 192.168.0.0/24 via 192.168.255.2 dev eth1 # central nets via centralRouter
	    ip route add 192.168.255.4/30 via 192.168.255.2 dev eth1 # inetRouter2 via centralRouter

	    iptables -N TRAFFIC
	    iptables -N SSH-INPUT
	    iptables -N SSH-INPUTTWO
	    iptables -A INPUT -s 192.168.255.2 -j TRAFFIC
	    iptables -A TRAFFIC -p icmp --icmp-type any -j ACCEPT
	    iptables -A TRAFFIC -m state --state ESTABLISHED,RELATED -j ACCEPT
	    iptables -A TRAFFIC -m state --state NEW -m tcp -p tcp --dport 22 -m recent --rcheck --seconds 30 --name SSH2 -j ACCEPT
	    iptables -A TRAFFIC -m state --state NEW -m tcp -p tcp -m recent --name SSH2 --remove -j DROP
	    iptables -A TRAFFIC -m state --state NEW -m tcp -p tcp --dport 9991 -m recent --rcheck --name SSH1 -j SSH-INPUTTWO
	    iptables -A TRAFFIC -m state --state NEW -m tcp -p tcp -m recent --name SSH1 --remove -j DROP
	    iptables -A TRAFFIC -m state --state NEW -m tcp -p tcp --dport 7777 -m recent --rcheck --name SSH0 -j SSH-INPUT
	    iptables -A TRAFFIC -m state --state NEW -m tcp -p tcp -m recent --name SSH0 --remove -j DROP
	    iptables -A TRAFFIC -m state --state NEW -m tcp -p tcp --dport 8881 -m recent --name SSH0 --set -j DROP
	    iptables -A SSH-INPUT -m recent --name SSH1 --set -j DROP
	    iptables -A SSH-INPUTTWO -m recent --name SSH2 --set -j DROP 
	    iptables -A TRAFFIC -j DROP

            SHELL

        when "inetRouter2"
          box.vm.provision "shell", run: "always", inline: <<-SHELL
            sysctl net.ipv4.conf.all.forwarding=1
            iptables -t nat -A POSTROUTING ! -d 192.168.0.0/16 -o eth0 -j MASQUERADE

	    ip route add 192.168.0.0/24 via 192.168.255.6 dev eth1 # central nets via centralRouter
	    ip route add 192.168.255.0/30 via 192.168.255.6 dev eth1 # inetRouter via centralRouter

	    iptables -t nat -I PREROUTING -m tcp -p tcp --dport 8080 -j DNAT --to-destination 192.168.0.2:80
	    iptables -t nat -I POSTROUTING -d 192.168.0.2 -m tcp -p tcp --dport 80 -j SNAT --to-source 192.168.255.5

            SHELL


	################# central ################################################
        when "centralRouter"
          box.vm.provision "shell", run: "always", inline: <<-SHELL
	    yum -y install nmap telnet

            echo "DEFROUTE=no" >> /etc/sysconfig/network-scripts/ifcfg-eth0 
            echo "GATEWAY=192.168.255.1" >> /etc/sysconfig/network-scripts/ifcfg-eth1
            echo "net.ipv4.ip_forward = 1" >> /etc/sysctl.conf
            systemctl restart network

	    ip route del default via 10.0.2.2 dev eth0
	    ip route add default via 192.168.255.1 dev eth1

            SHELL
        when "centralServer"
          box.vm.provision "shell", run: "always", inline: <<-SHELL
	    yum install -y epel-release
	    yum install -y nginx
	    systemctl start nginx
	    systemctl enable nginx

            echo "DEFROUTE=no" >> /etc/sysconfig/network-scripts/ifcfg-eth0 
            echo "GATEWAY=192.168.0.1" >> /etc/sysconfig/network-scripts/ifcfg-eth1
            systemctl restart network

	    ip route del default via 10.0.2.2 dev eth0
	    ip route add default via 192.168.0.1 dev eth1

            SHELL

        end
    end

  end
  
  
end
